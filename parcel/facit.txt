// Vue

import Vue from 'vue'
import App from './App.vue'

new Vue({ el: '#app', render: d => d(App) })




// React

import React from 'react';
import ReactDOM from 'react-dom';

import App from './App'

ReactDOM.render(
    <App />,
    document.getElementById('app')
)




// index.html

<!DOCTYPE html>
<html>
  <head>
    <meta
      charset="utf-8"
      name="viewport"
      content="width=device-width,initial-scale=1.0"
    />
    <title>Elevate - Parcel</title>
  </head>
  <body>
    <div id="app">Loading...</div>
    <script src="#########"></script>
  </body>
</html>



// Proxy 

// yarn add express http-proxy-middleware compression

const Bundler = require('parcel-bundler')
const express = require('express')
const proxyMiddleware = require('http-proxy-middleware')
const compression = require('compression')

// Proxy
var app = express()
app.use(compression())
var api = process.argv[2] || 'https://google.se'
console.log(`Using api server: ${api}`)
app.use(
  '/api',
  proxyMiddleware({
    target: api,
    changeOrigin: true
  })
)
app.use('/', proxyMiddleware('http://localhost:1234'))
app.listen(3800)

// Bundler
const file = './src/index.html' // Pass an absolute path to the entrypoint here
const options = {} // See options section of api docs, for the possibilities
var bundler = new Bundler(file, options)
server = bundler.serve()
